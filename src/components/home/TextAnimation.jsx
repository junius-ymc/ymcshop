import React, { useState, useEffect } from 'react';

const TextAnimation = () => {
  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Array ‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á
  const texts = [
    'üëâ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà YMC Shop ‚Äì ‡πÅ‡∏´‡∏•‡πà‡∏á‡∏£‡∏ß‡∏°‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏ú‡πâ‡∏≤‡∏™‡πÑ‡∏ï‡∏•‡πå Streetwear ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏á‡∏Å‡∏≤‡∏¢ Vintage ‡∏ó‡∏µ‡πà‡∏Ñ‡∏±‡∏î‡∏™‡∏£‡∏£‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏∏‡∏ì üëà',
    'üõ† ‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ..‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á, ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á üòé',
    // 'üëå ... ‡∏Å‡∏£‡∏π‡πÉ‡∏™‡πà ‡∏≠‡∏¥‡πÇ‡∏°‡∏ï‡∏¥‡∏Ñ‡πà‡∏≠‡∏ô ‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡πÇ‡∏ß‡πâ‡∏¢‡∏¢‡∏¢‡∏¢‡∏¢!! ... üòù',
    // 'üëΩ ‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÅ‡∏ö‡∏ö‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡πÑ‡∏î‡πâ‡πÇ‡∏Ñ‡πâ‡∏î‡∏ô‡∏µ‡πâ ‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ñ‡∏≤‡∏° Ai üòÖ ... (Ai ‡∏ô‡∏µ‡πà‡∏°‡∏±‡∏ô‡∏™‡∏∏‡∏î‡∏¢‡∏≠‡∏î‡∏à‡∏£‡∏¥‡∏á‡πÜüëç) ‚ù§Luv loey‚ù§',
  ];

  const [displayText, setDisplayText] = useState('');
  const [index, setIndex] = useState(0);
  const [isDeleting, setIsDeleting] = useState(false);
  const [waitTime, setWaitTime] = useState(0);
  const [currentTextIndex, setCurrentTextIndex] = useState(0); // ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÉ‡∏ô Array

  useEffect(() => {
    let timeout;

    if (waitTime > 0) {
      // ‡∏£‡∏≠ 5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏´‡∏°‡πà
      timeout = setTimeout(() => {
        setWaitTime(0); // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏≠
        setIsDeleting(true); // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
      }, waitTime);
    } else if (isDeleting) {
      // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡∏•‡∏∞‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£
      if (index > 0) {
        timeout = setTimeout(() => {
          setDisplayText((prev) => prev.slice(0, -1));
          setIndex((prev) => prev - 1);
        }, 25); // ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö
      } else {
        setIsDeleting(false); // ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏•‡∏ö
        setIndex(0); // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï index ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏´‡∏°‡πà

        // ‡∏™‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡πÉ‡∏ô Array
        setCurrentTextIndex((prev) => (prev + 1) % texts.length);
        setWaitTime(0); // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏≠
      }
    } else {
      // ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡∏•‡∏∞‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£
      const currentText = texts[currentTextIndex]; // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
      if (index < currentText.length) {
        timeout = setTimeout(() => {
          setDisplayText((prev) => prev + currentText[index]);
          setIndex((prev) => prev + 1);
        }, 90); // ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå
      } else {
        setWaitTime(5000); // ‡∏£‡∏≠ 5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏´‡∏°‡πà
      }
    }

    return () => clearTimeout(timeout); // ‡∏•‡πâ‡∏≤‡∏á timeout ‡πÄ‡∏°‡∏∑‡πà‡∏≠ component ‡∏ñ‡∏π‡∏Å‡∏•‡∏ö
  }, [index, isDeleting, waitTime, currentTextIndex, texts]);

  return (
    <div className="mini-box">
      <div className="typewriter-container">
        <div className="typewriter-text">
          <div className="mini-link-box-info">
            {displayText}
            <img src="/img/icon/cursor.gif" />
          </div>
        </div>
      </div>
    </div>
  );
};

export default TextAnimation;
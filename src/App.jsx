// rafce
import React, { useEffect, useState } from 'react'
import AppRoutes from './routes/AppRoutes'
import { ToastContainer } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import "./i18n"; // ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ i18n ‡∏ï‡∏±‡∏ß‡∏ä‡πà‡∏ß‡∏¢‡πÅ‡∏õ‡∏•‡∏†‡∏≤‡∏©‡∏≤
import { HelmetProvider } from "react-helmet-async";
import { registerSW } from 'virtual:pwa-register';

const App = () => {

  // registerSW({ immediate: true });
  const [showUpdate, setShowUpdate] = useState(false);
  const updateSW = registerSW({
    onNeedRefresh() {
      console.log("üî• ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï!");
      setShowUpdate(true); // ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
    },
    onOfflineReady() {
      console.log("‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå‡πÅ‡∏•‡πâ‡∏ß üéâ");
    }
  });

  // ‡∏õ‡∏¥‡∏î Pull-to-Refresh ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏ß‡πá‡∏ö‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡πÄ‡∏≠‡∏á‡∏ï‡∏≠‡∏ô "‡∏•‡∏≤‡∏Å‡∏•‡∏á" ‡∏à‡∏≤‡∏Å‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏™‡∏∏‡∏î
  useEffect(() => {
    let touchStartY = 0;

    const handleTouchStart = (e) => {
      touchStartY = e.touches[0].clientY;
    };

    const handleTouchMove = (e) => {
      const touchY = e.touches[0].clientY;
      const scrollY = window.scrollY || document.documentElement.scrollTop;

      if (scrollY === 0 && touchY > touchStartY) {
        e.preventDefault();
      }
    };

    document.addEventListener("touchstart", handleTouchStart);
    document.addEventListener("touchmove", handleTouchMove, { passive: false });

    return () => {
      document.removeEventListener("touchstart", handleTouchStart);
      document.removeEventListener("touchmove", handleTouchMove);
    };
  }, []);

  return (
    <>
      <ToastContainer
        position="top-center"
        autoClose={2500}
        limit={3} // ‡πÇ‡∏ä‡∏ß‡πå‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
      />
      <HelmetProvider>
        <AppRoutes />
      </HelmetProvider>
      {/* ‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô */}
      {showUpdate && (
        <div className="fixed bottom-4 right-4 bg-yellow-500 text-white px-4 py-2 rounded shadow-lg z-50">
          <p>‡∏°‡∏µ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà! üéâ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï</p>
          <button onClick={() => updateSW(true)} className="mt-2 bg-white text-black px-3 py-1 rounded">
            ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà
          </button>
        </div>
      )}
    </>
  )
}

export default App